// Please see documentation at https://docs.microsoft.com/aspnet/core/client-side/bundling-and-minification
// for details on configuring this project to bundle and minify static web assets.

// Write your JavaScript code.

//código agregado para filtrar las tablas y cambiarle el lenguaje a español
$(document).ready(function () {
    $('#miTabla').DataTable({
        "language": {
            "url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
        }
    });

});

//funcion para cambiar comportamiento segun resolucion
function myFunction(x) {
    if (x.matches) { // If media query matches        
        $('.miClass').hide();        
    } else {
        $('.miClass').show();        
    }
}

var x = window.matchMedia("(max-width: 770px)")
myFunction(x) // Call listener function at run time
x.addListener(myFunction) // Attach listener function on state changes



//ajax para obtener lista de patologias filtradas
const getPatologias = () => {

    let config = {
        type: 'get',    //puedo usar get  y pasar el id en la url.. o post y usar el atributo data para enviar el id        
        url: "/Sesiones/GetAll", // Url                
        /*
        data: {
            Tipo: "1", // Parámetros            
        },*/
        dataType: 'json',

        success: (respuesta) => {                     
            $.each(respuesta, (indice, elemento) => {                
                alert(elemento.nombre);
                alert("hola");
            });    
        },        
        error: () => {
            alert("Error al ejecutar la api");
        }
    };    
    $.ajax(config);
}

const filtrando = () => {

    let config = {
        type: 'get',    //puedo usar get  y pasar el id en la url.. o post y usar el atributo data para enviar el id        
        url: "/Sesiones/filtrarPatologias/3", // Url                
        /*
        data: {
            Tipo: "1", // Parámetros            
        },*/
        dataType: 'json',

        success: (respuesta) => {
            $.each(respuesta, (indice, elemento) => {
                alert(elemento.nombre);                
                alert("hola");
            });
        },
        error: () => {
            alert("Error al ejecutar la api");
        }
    };
    $.ajax(config);
}

const filtrarPatologias = () => {
    //const tipoId = $('#TipoPatologias').val();
    $.ajax({
        url: "/Sesiones/filtrarPatologias/3", // + tipoId,
        success: function (respuesta) {
            $.each(respuesta, (index, element) => {
                alert(elemento.nombre);                
            });
        }
    });
}



//funciones para filtrar combos


$(".cmborigen").change(function () {
    fillCombo("cmbdestino", $(".cmborigen").val(), $(".cmborigen").data("id"));
    $(".cmbdestino").change();
    $("#patologiasMostrar").show();
});

function fillCombo(updateId, value, action) {
    $.getJSON(action
        + "/" + value,
        function (data) {
            $("." + updateId).empty();
            
            $.each(data, function (i, item) {
                $("." + updateId).append("<option  value='"
                    + item.id + "'>" + item.nombre
                    + "</option >");
            });
        });
}


//agregado para reemplazar el input file 
jQuery('input[type=file]').change(function(){
 var filename = jQuery(this).val().split('\\').pop();
 var idname = jQuery(this).attr('id');
 console.log(jQuery(this));
 console.log(filename);
 console.log(idname);
 jQuery('span.'+idname).next().find('span').html(filename);
});
