@using Microsoft.AspNetCore.Identity
@{
    //se cambio>IdentityUser> por mi clase Usuario... <Usuario>
}
@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    
    <li class="nav-item">
        @{ //se reemplazo @User.Identity.Name!  por @UserManager.GetUserAsync(User).Result.Nombre para poder usar mi clase usuario
           }
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Bienvenido @UserManager.GetUserAsync(User).Result.Email </a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-light">Salir</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Ingresar</a>
    </li>
}
</ul>
